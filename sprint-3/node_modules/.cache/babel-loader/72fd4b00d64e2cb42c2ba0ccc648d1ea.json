{"ast":null,"code":"var _jsxFileName = \"/Users/rosakang/Desktop/Brainstation/week06/BrainFlix/sprint-2/src/component/App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/main.css\";\nimport Header from \"./Header\";\nimport Hero from \"./Hero\";\nimport Clip from \"./Clip\";\nimport NewComment from \"./NewComment\";\nimport CommentList from \"../container/CommentList\";\nimport VideoList from \"../container/VideoList\";\nconst videoUrl = \"https://project-2-api.herokuapp.com/videos?api_key=46a5c4b9-e4ed-4f7e-bbf7-be32f1a02279\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: [],\n      mainVideo: {\n        id: \"\",\n        title: \"\",\n        description: \"\",\n        channel: \"\",\n        image: \"\",\n        views: \"\",\n        likes: \"\",\n        duration: \"\",\n        video: \"\",\n        timestamp: 0,\n        comments: []\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(videoUrl).then(video => {\n      const newVideos = video.data.map(videolist => {\n        return {\n          id: videolist.id,\n          title: videolist.title,\n          channel: videolist.channel,\n          image: videolist.image\n        };\n      });\n      this.setState({\n        videos: newVideos\n      });\n      const mainVideoUrl = \"https://project-2-api.herokuapp.com/videos/\".concat(video.data[0].id, \"?api_key=46a5c4b9-e4ed-4f7e-bbf7-be32f1a02279\");\n      axios.get(mainVideoUrl).then(response => {\n        console.log(response.data);\n        this.setState({\n          mainVideo: response.data\n        });\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    // only update chart if the data has changed\n    if (prevProps.data !== this.props.data) {\n      this.chart = c3.load({\n        data: this.props.data\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Header, {\n      history: this.props.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Hero, {\n      videos: this.state.mainVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"boxClip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Clip, {\n      videos: this.state.mainVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(NewComment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(CommentList, {\n      videos: this.state.mainVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(VideoList, {\n      videos: this.state.videos,\n      mainVideo: this.state.mainVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rosakang/Desktop/Brainstation/week06/BrainFlix/sprint-2/src/component/App.js"],"names":["React","Component","axios","Header","Hero","Clip","NewComment","CommentList","VideoList","videoUrl","App","state","videos","mainVideo","id","title","description","channel","image","views","likes","duration","video","timestamp","comments","componentDidMount","get","then","newVideos","data","map","videolist","setState","mainVideoUrl","response","console","log","componentDidUpdate","prevProps","props","chart","c3","load","render","history"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/main.css\";\nimport Header from \"./Header\";\nimport Hero from \"./Hero\";\nimport Clip from \"./Clip\";\nimport NewComment from \"./NewComment\";\nimport CommentList from \"../container/CommentList\";\nimport VideoList from \"../container/VideoList\";\n\nconst videoUrl =\n  \"https://project-2-api.herokuapp.com/videos?api_key=46a5c4b9-e4ed-4f7e-bbf7-be32f1a02279\";\n\nclass App extends Component {\n  state = {\n    videos: [],\n    mainVideo: {\n      id: \"\",\n      title: \"\",\n      description: \"\",\n      channel: \"\",\n      image: \"\",\n      views: \"\",\n      likes: \"\",\n      duration: \"\",\n      video: \"\",\n      timestamp: 0,\n      comments: []\n    }\n  };\n\n  componentDidMount() {\n    axios.get(videoUrl).then(video => {\n      const newVideos = video.data.map(videolist => {\n        return {\n          id: videolist.id,\n          title: videolist.title,\n          channel: videolist.channel,\n          image: videolist.image\n        };\n      });\n      this.setState({\n        videos: newVideos\n      });\n      const mainVideoUrl = `https://project-2-api.herokuapp.com/videos/${\n        video.data[0].id\n      }?api_key=46a5c4b9-e4ed-4f7e-bbf7-be32f1a02279`;\n      axios.get(mainVideoUrl).then(response => {\n        console.log(response.data);\n        this.setState({\n          mainVideo: response.data\n        });\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    // only update chart if the data has changed\n    if (prevProps.data !== this.props.data) {\n      this.chart = c3.load({\n        data: this.props.data\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header history={this.props.history} />\n        <Hero videos={this.state.mainVideo} />\n        <div className=\"box\">\n          <div className=\"boxClip\">\n            <Clip videos={this.state.mainVideo} />\n            <NewComment />\n            <CommentList videos={this.state.mainVideo} />\n          </div>\n          <VideoList\n            videos={this.state.videos}\n            mainVideo={this.state.mainVideo}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}